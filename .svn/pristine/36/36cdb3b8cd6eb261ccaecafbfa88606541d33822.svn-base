from django.db import models
from django_enumfield import enum


##
##  TODO: Implement methods
##


class UserType(enum.Enum):
    Administrator = 0
    Doctor = 1
    Nurse = 2
    Patient = 3
    User = 4


class Gender(enum.Enum):
    Male = 0
    Female = 1
    Unspecified = 2


class MaritalStatus(enum.Enum):
    Married = 0
    LivingCommonLaw = 1
    Widowed = 2
    Separated = 3
    Divorced = 4
    Single = 5
    Unspecified = 6


class LogLevel(enum.Enum):
    Info = 0
    Warning = 1
    Error = 2


class User(models.Model):
    username = models.CharField(max_length=25, null=False)
    password = models.CharField(max_length=255, null=False)
    first_name = models.CharField(max_length=50, null=False)
    last_name = models.CharField(max_length=50, null=False)
    user_type = enum.EnumField(UserType, default=UserType.User)


class Address(models.Model):
    address_line_1 = models.CharField(max_length=255)
    address_line_2 = models.CharField(max_length=255)
    city = models.CharField(max_length=255)
    state = models.CharField(max_length=255)
    zipcode = models.CharField(max_length=255)


class Hospital(models.Model):
    name = models.CharField(max_length=255)
    address = models.OneToOneField('Address')


class Doctor(User):
    User.user_type = enum.EnumField(UserType, default=UserType.Doctor)
    patients = models.ManyToManyField('Patient')
    nurses = models.ManyToManyField('Nurse')
    hospitals = models.ForeignKey('Hospital')


class Nurse(User):
    User.user_type = enum.EnumField(UserType, default=UserType.Nurse)
    doctors = models.ManyToManyField('Doctor')


class Administrator(User):
    User.user_type = enum.EnumField(UserType, default=UserType.Administrator)


class Patient(User):
    User.user_type = enum.EnumField(UserType, default=UserType.Patient)
    calendar = models.OneToOneField('Calendar')
    records = models.ForeignKey('MedicalRecord')
    height = models.IntegerField()  # Height in cm
    weight = models.IntegerField()  # Weight in lbs
    cholesterol = models.IntegerField()  # Cholesterol in mg/dL
    dob = models.DateField()
    address = models.OneToOneField('Address')
    home_phone = models.CharField(max_length=12)
    work_phone = models.CharField(max_length=12)
    age = models.IntegerField()
    sex = enum.EnumField(Gender, default=Gender.Unspecified)
    marital_status = enum.EnumField(MaritalStatus, default=MaritalStatus.Unspecified)
    health_insurance_provider = models.CharField(max_length=15)  # All the provider codes ive seen are 5 + 10 numbers
    health_insurance_number = models.CharField(max_length=10)  # All the insurance numbers ive seen are 5 + 5 characters
    doctors = models.ForeignKey('Doctor')
    primary_care_provider = models.OneToOneField('Doctor', related_name="primary_care_provider")
    prescriptions = models.ForeignKey('Prescription', related_name="patient_prescriptions")


class Calendar(models.Model):
    appointments = models.ForeignKey('Appointment')


class Appointment(models.Model):
    name = models.CharField(max_length=255)
    description = models.CharField(max_length=255)
    datetime = models.DateTimeField()


class Prescription(models.Model):
    patient = models.OneToOneField('Patient')
    doctor = models.OneToOneField('Doctor')
    address = models.OneToOneField('Address')
    name = models.CharField(max_length=255)
    expiration_date = models.DateField()
    refills = models.IntegerField()


class MedicalRecord(models.Model):
    pass


class LogEntry(models.Model):
    datetime = models.DateTimeField()
    level = enum.EnumField(LogLevel, default=LogLevel.Info)
    message = models.TextField()
